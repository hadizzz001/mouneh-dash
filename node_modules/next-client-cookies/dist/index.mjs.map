{"version":3,"sources":["../src/provider.tsx"],"sourcesContent":["'use client';\n\nimport React, {\n  FC,\n  ReactNode,\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { CookieAttributes, Cookies } from './types';\nimport jsCookies from 'js-cookie';\nimport { ServerInsertedHTMLContext } from 'next/navigation';\nimport { ServerInsertedHTMLHook } from 'next/dist/shared/lib/server-inserted-html';\n\n// Context\n\nconst Ctx = createContext<Cookies | null>(null);\n\nexport const useCookies = (): Cookies => {\n  const cookies = useContext(Ctx);\n\n  if (typeof window !== 'undefined') {\n    return jsCookies;\n  }\n\n  if (!cookies) {\n    throw new Error('Missing <CookiesProvider>');\n  }\n\n  return cookies;\n};\n\n// SSR Provider\n\ninterface CookieRecord {\n  name: string;\n  value: string;\n}\n\ntype CookieCommand = {\n  [key in keyof Cookies]: [key, ...Parameters<Cookies[key]>];\n}['set' | 'remove'];\n\ntype SerializedValue<T> = {\n  [K in keyof T]: Date extends T[K]\n    ? string\n    : object extends T[K]\n    ? SerializedValue<T[K]>\n    : T[K];\n};\n\nconst windowVarName = '__cookies_commands';\n\ndeclare global {\n  interface Window {\n    [windowVarName]: SerializedValue<CookieCommand>[];\n  }\n}\n\nexport const CookiesProvider: FC<{\n  value: CookieRecord[];\n  children: ReactNode;\n}> = ({ value, children }) => {\n  const insertedHTML = useContext<ServerInsertedHTMLHook | null>(\n    ServerInsertedHTMLContext as never,\n  );\n\n  const cookies = useMemo((): Cookies => {\n    const map: Partial<Record<string, string>> = Object.fromEntries(\n      value.map((c) => [c.name, c.value]),\n    );\n\n    return {\n      get: (name?: string) => (name == null ? { ...map } : map[name]) as never,\n      set: (...args) => {\n        insertedHTML?.(() => getCookieCommandHtml('set', ...args));\n        map[args[0]] = args[1];\n      },\n      remove: (...args) => {\n        insertedHTML?.(() => getCookieCommandHtml('remove', ...args));\n        delete map[args[0]];\n      },\n    };\n  }, [value, insertedHTML]);\n\n  useEffect(() => {\n    const commands = window[windowVarName] || [];\n    if (!commands.length) return;\n\n    for (const command of commands) {\n      runCookieCommand(command);\n    }\n  }, []);\n\n  return <Ctx.Provider value={cookies}>{children}</Ctx.Provider>;\n};\n\nconst getCookieCommandHtml = (...command: CookieCommand) => (\n  <script\n    dangerouslySetInnerHTML={{\n      __html: `window.${windowVarName} = window.${windowVarName} || [];window.${windowVarName}.push(${JSON.stringify(\n        command,\n      ).replaceAll('</', '<\\\\/')});`,\n    }}\n  />\n);\n\nconst runCookieCommand = (command: SerializedValue<CookieCommand>) => {\n  if (typeof window === 'undefined') return;\n\n  switch (command[0]) {\n    case 'set': {\n      jsCookies.set(\n        command[1],\n        command[2],\n        command[3] && deserializeCookieAttributes(command[3]),\n      );\n      break;\n    }\n\n    case 'remove': {\n      jsCookies.remove(\n        command[1],\n        command[2] && deserializeCookieAttributes(command[2]),\n      );\n      break;\n    }\n  }\n};\n\nconst deserializeCookieAttributes = (\n  attributes: SerializedValue<CookieAttributes>,\n): CookieAttributes => ({\n  ...attributes,\n  expires:\n    typeof attributes.expires === 'string'\n      ? new Date(attributes.expires)\n      : attributes.expires,\n});\n"],"mappings":";;;;;AAEA,OAAOA,SAGLC,eACAC,YACAC,WACAC,eACK;AAEP,OAAOC,eAAe;AACtB,SAASC,iCAAiC;AAK1C,IAAMC,MAAMC,8BAA8B,IAAA;AAEnC,IAAMC,aAAa,6BAAA;AACxB,QAAMC,UAAUC,WAAWJ,GAAAA;AAE3B,MAAI,OAAOK,WAAW,aAAa;AACjC,WAAOC;EACT;AAEA,MAAI,CAACH,SAAS;AACZ,UAAM,IAAII,MAAM,2BAAA;EAClB;AAEA,SAAOJ;AACT,GAZ0B;AAiC1B,IAAMK,gBAAgB;AAQf,IAAMC,kBAGR,wBAAC,EAAEC,OAAOC,SAAQ,MAAE;AACvB,QAAMC,eAAeR,WACnBS,yBAAAA;AAGF,QAAMV,UAAUW,QAAQ,MAAA;AACtB,UAAMC,MAAuCC,OAAOC,YAClDP,MAAMK,IAAI,CAACG,MAAM;MAACA,EAAEC;MAAMD,EAAER;KAAM,CAAA;AAGpC,WAAO;MACLU,KAAK,CAACD,SAAmBA,QAAQ,OAAO;QAAE,GAAGJ;MAAI,IAAIA,IAAII,IAAAA;MACzDE,KAAK,IAAIC,SAAAA;AACPV,uBAAe,MAAMW,qBAAqB,OAAA,GAAUD,IAAAA,CAAAA;AACpDP,YAAIO,KAAK,CAAA,CAAE,IAAIA,KAAK,CAAA;MACtB;MACAE,QAAQ,IAAIF,SAAAA;AACVV,uBAAe,MAAMW,qBAAqB,UAAA,GAAaD,IAAAA,CAAAA;AACvD,eAAOP,IAAIO,KAAK,CAAA,CAAE;MACpB;IACF;EACF,GAAG;IAACZ;IAAOE;GAAa;AAExBa,YAAU,MAAA;AACR,UAAMC,WAAWrB,OAAOG,aAAAA,KAAkB,CAAA;AAC1C,QAAI,CAACkB,SAASC;AAAQ;AAEtB,eAAWC,WAAWF,UAAU;AAC9BG,uBAAiBD,OAAAA;IACnB;EACF,GAAG,CAAA,CAAE;AAEL,SAAO,sBAAA,cAAC5B,IAAI8B,UAAQ;IAACpB,OAAOP;KAAUQ,QAAAA;AACxC,GAjCK;AAmCL,IAAMY,uBAAuB,2BAAIK,YAC/B,sBAAA,cAACG,UAAAA;EACCC,yBAAyB;IACvBC,QAAQ,UAAUzB,aAAAA,aAA0BA,aAAAA,iBAA8BA,aAAAA,SAAsB0B,KAAKC,UACnGP,OAAAA,EACAQ,WAAW,MAAM,MAAA,CAAA;EACrB;IANyB;AAU7B,IAAMP,mBAAmB,wBAACD,YAAAA;AACxB,MAAI,OAAOvB,WAAW;AAAa;AAEnC,UAAQuB,QAAQ,CAAA,GAAE;IAChB,KAAK,OAAO;AACVtB,gBAAUe,IACRO,QAAQ,CAAA,GACRA,QAAQ,CAAA,GACRA,QAAQ,CAAA,KAAMS,4BAA4BT,QAAQ,CAAA,CAAE,CAAA;AAEtD;IACF;IAEA,KAAK,UAAU;AACbtB,gBAAUkB,OACRI,QAAQ,CAAA,GACRA,QAAQ,CAAA,KAAMS,4BAA4BT,QAAQ,CAAA,CAAE,CAAA;AAEtD;IACF;EACF;AACF,GArByB;AAuBzB,IAAMS,8BAA8B,wBAClCC,gBACsB;EACtB,GAAGA;EACHC,SACE,OAAOD,WAAWC,YAAY,WAC1B,IAAIC,KAAKF,WAAWC,OAAO,IAC3BD,WAAWC;AACnB,IARoC;","names":["React","createContext","useContext","useEffect","useMemo","jsCookies","ServerInsertedHTMLContext","Ctx","createContext","useCookies","cookies","useContext","window","jsCookies","Error","windowVarName","CookiesProvider","value","children","insertedHTML","ServerInsertedHTMLContext","useMemo","map","Object","fromEntries","c","name","get","set","args","getCookieCommandHtml","remove","useEffect","commands","length","command","runCookieCommand","Provider","script","dangerouslySetInnerHTML","__html","JSON","stringify","replaceAll","deserializeCookieAttributes","attributes","expires","Date"]}